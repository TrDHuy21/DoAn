@using Application.Dtos.CategoryDtos
@using Application.Dtos.ImageDtos
@using Application.Dtos.ProductDetailAttributeDtos
@using Application.Dtos.ProductDetailDtos

@{
	var productDetail = ViewData["productDetail"] as DetailClientProductDetail
		?? new DetailClientProductDetail();

	var productDetailAttribute = productDetail.ProductDetailAttributes
		?? new List<ProductDetailAttributeDto>();

	var otherProductDetails = ViewData["otherProductDetails"] as List<IndexProductDetailDto>
		?? new List<IndexProductDetailDto>();

	string categoryName = ViewData["categoryName"] as string
		?? string.Empty;

	List<ImageFileDto> images = ViewData["images"] as List<ImageFileDto>
		?? new List<ImageFileDto>();
}

<link href="~/css/ProductDetailInfo.css" rel="stylesheet" />

<div class="container mt-4 mb-5">

	<!-- thông tin sản phẩm -->
	<div class="row">

		<!-- image carousel -->
		<div class="col-md-6">
			<div id="carouselExampleIndicators" class="carousel slide" data-bs-ride="carousel">
				<div class="carousel-inner">
					@for (int i = 0; i < images.Count; i++)
					{
						var base64String = Convert.ToBase64String(images[i].Data);
						var imageSrc = $"data:{images[i].Type};base64,{base64String}";
						<div class="carousel-item @(i == 0 ? "active":"")">
							<img src="@imageSrc" class="d-block w-100" alt="Image 1">
						</div>
					}
				</div>
				<a class="carousel-control-prev" href="#carouselExampleIndicators" role="button" data-bs-slide="prev">
					<span class="carousel-control-prev-icon" aria-hidden="true"></span>
					<span class="sr-only">Previous</span>
				</a>
				<a class="carousel-control-next" href="#carouselExampleIndicators" role="button" data-bs-slide="next">
					<span class="carousel-control-next-icon" aria-hidden="true"></span>
					<span class="sr-only">Next</span>
				</a>
			</div>

			<div class="thumbnail-container">
				@for (int i = 0; i < images.Count; i++)
				{
					var base64String = Convert.ToBase64String(images[i].Data);
					var imageSrc = $"data:{images[i].Type};base64,{base64String}";
					<div class="col-2">
						<img src="@imageSrc" class="thumbnail img-fluid @(i == 0 ? "active-thumbnail" : "")"
							 data-bs-target="#carouselExampleIndicators" data-bs-slide-to="@i">
					</div>
				}
			</div>
		</div>

		<!-- thông tin sản phẩm -->
		<div class="col-md-6">
			<h1 class="h3 mb-3">@productDetail.Name</h1>
			<h5 class="mb-1">Màu sắc: @productDetail.ColorName</h5>

			<div class="mb-3">
				<span class="h3 text-danger me-2">@productDetail.Price</span>
				<span class="price-old">@productDetail.Price</span>
				<span class="discount-badge">-13%</span>
			</div>

			<!-- Phiên bản khác -->
			<div class="mb-4">
				<p class="mb-2">Lựa chọn phiên bản</p>
				<div class="d-flex flex-wrap">
					@foreach (var item in otherProductDetails)
					{
						<div class="col-4 mb-3">
							<!-- Thay đổi số cột -->
							<div class="card @((item.Id == productDetail.Id) ? "border-primary" : "")">
								<!-- Nổi bật item đang chọn -->
								<div class="card-body">
									@if (item.Id != productDetail.Id)
									{
										<a class="btn variant-btn w-100 d-flex align-items-center" href="@Url.RouteUrl("productdetail", new { id = item.Id })">
											@if (item.Image != null)
											{
												var base64String = Convert.ToBase64String(item.Image.Data);
												var imageSrc = $"data:{item.Image.Type};base64,{base64String}";
												<img src="@imageSrc" alt="@item.Name" class="img-fluid me-2" width="60" />
											}
											<span class="fw-bold">@item.Name</span>
										</a>
									}
									else
									{
										<div class="btn variant-btn w-100 d-flex align-items-center">
											@if (item.Image != null)
											{
												var base64String = Convert.ToBase64String(item.Image.Data);
												var imageSrc = $"data:{item.Image.Type};base64,{base64String}";
												<img src="@imageSrc" alt="@item.Name" class="img-fluid me-2" width="60" />
											}
											<span class="fw-bold">@item.Name</span>
										</div>
									}
									<div class="product-details mt-2">
										<span class="text-muted">Màu: @item.ColorName</span><br />
										@foreach (var att in item.ProductDetailAttributes ?? new List<ProductDetailAttributeDto>())
										{
											<span class="badge bg-light text-dark border me-2 mb-2">@att.Value</span>
										}
										<br />
										<strong class="text-danger">@item.Price</strong>
									</div>
								</div>
							</div>
						</div>
					}
				</div>
			</div>


			<div class="d-flex mb-3">
				<button class="btn btn-outline-danger me-2">
					<i class="fas fa-cart-plus"></i>
				</button>
				<button class="btn btn-danger flex-grow-1">
					MUA NGAY
					<small class="d-block">(Giao tận nhà hoặc nhận tại cửa hàng)</small>
				</button>
			</div>
		</div>
	</div>

	<!-- Thông số kĩ thuật -->
	<div class="row">
		<div class="col-12">
			<h2 class="h4">Thông số kỹ thuật</h2>
			<table class="table table-striped specs-table">
				<tbody>
					@foreach (var item in productDetailAttribute)
					{
						<tr>
							<th>@item.ProductAttributeName</th>
							<td>@item.Value</td>
						</tr>
					}
				</tbody>
			</table>
		</div>
	</div>

	<!-- sản phẩm khác -->
	<div class="row">
		@await Component.InvokeAsync("StatusFilteredProduct", new { categoryName = categoryName, filter = "ishot", name = "Các sản đang hot khác" })
	</div>

	<div class="row">
		@await Component.InvokeAsync("StatusFilteredProduct", new { categoryName = categoryName, filter = "isnew", name = "Các sản mới" })
	</div>

	<div class="row">
		@await Component.InvokeAsync("StatusFilteredProduct", new { categoryName = categoryName, filter = "issale", name = "Các sản đang giảm giá" })
	</div>
</div>

<script src="~/js/ProductSlider.js"></script>

